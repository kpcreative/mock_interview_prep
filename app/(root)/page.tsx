import InterviewCard from '@/components/InterviewCard'
import { Button } from '@/components/ui/button'
import { dummyInterviews } from '@/constants'
import {getCurrentUser} from '@/lib/actions/auth.action'
import {  getInterviewsByUserId, getLatestInterviews } from '@/lib/actions/general.action'
import Image from 'next/image'
import Link from 'next/link'
import React from 'react'

const page = async () => {
  const user= await getCurrentUser();
//   Symbol	Name	Meaning
// ?.	Optional Chaining	Only access id if user is not null or undefined.
// !	Non-null Assertion	Tells TypeScript: "Don't worry, I know it's not null or undefined"

//------note-- ye dono ko alg alg pass na krke as they dont depen on each other...as they can block each other due to await .. also they dint depne don each other
//so here we will use the concept known as parallel request---
//it will allow us to fetch both of these at the same time--
//as promise.all will allow them to fetch in parallel as it doesnt depend on each other...

 const [userInterviews,LatestInterview]=await Promise.all([
  (await getInterviewsByUserId(user?.id!)) || [],
  (await getLatestInterviews({userId:user?.id!})) || [],
 ])

  // const userInterviews = (await getInterviewsByUserId(user?.id!)) || [];
  //  const LatestInterview = (await getLatestInterviews({user?.id!})) || []; //dekh to getlatest me params mang rha tha par maine sirf 1 hi pass kiya destructure krke to usse koi dikt nhi hta...hamne waha limit default=20 hi liya hua hai
  //also see for past interviews..
  const hasPastInterviews = userInterviews.length > 0;
  const hasUpcomingInterviews=LatestInterview.length>0; //those interviews which are not generated by us
  return (
   <>
   <section className="card-cta">
    <div className="flex flex-col gap-6 max-w-lg">
       <h2>
        AI Mock Interviews: Sharpen Your Skills, Impress Recruiters
       </h2>
       <p className='text-lg'>
        Practice on real interview questions with AI-Powered Practice & Feedback
       </p>
       <Button asChild className='btn-primary max-sm:w-full'>
        <Link href="/interview">
        Start Mock Interview
        </Link>
        
       </Button>
    </div>
     <Image src="/robot2.png" alt="robo-dude" height={400} width={400} className=" max-sm:hidden" />
   </section>
   <section className="flex flex-col gap-6 mt-8">
       <h2>Your Interviews</h2>
       <div className='interviews-section'>
         {/* <p>You Haven&apos;t taken Any Interviews Yet</p> */}
          {/* <p>There are No interview Availaible</p> */}
          {/* {dummyInterviews.map((interview) => (
          <InterviewCard {...interview} key={interview.id}/>
        ))} */}
        {/* ag koi pastinterview hai to usko map krke chla do ki your interview section me  */}
        {
        hasPastInterviews?(userInterviews?.map((interview)=>(
            <InterviewCard {...interview} key={interview.id}/>
        ))):(<p>You have not taken any interviews yet</p>)
      }
       </div>
   </section>
   <section className='flex flex-col gap-6 mt-8'>
       <h2>Take an Interview</h2>
       <div className='interviews-section'>
         {
        hasUpcomingInterviews?(LatestInterview?.map((interview)=>(
            <InterviewCard {...interview} key={interview.id}/>
        ))):(<p>No any Taken interviews Yet by Any other users</p>)
      }
       
       </div>
   </section>
   </>
  )
}

export default page
